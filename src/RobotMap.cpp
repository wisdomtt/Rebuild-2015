// RobotBuilder Version: 1.5
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


#include "RobotMap.h"
#include "LiveWindow/LiveWindow.h"


// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=ALLOCATION
SpeedController* RobotMap::driveBaseFrontLeft = NULL;
SpeedController* RobotMap::driveBaseBackLeft = NULL;
SpeedController* RobotMap::driveBaseFrontRight = NULL;
SpeedController* RobotMap::driveBaseBackRight = NULL;
RobotDrive* RobotMap::driveBasedbTank = NULL;
Gyro* RobotMap::driveBasedbGyro = NULL;
Encoder* RobotMap::driveBasedbLeftEncoder = NULL;
Encoder* RobotMap::driveBasedbRightEncoder = NULL;
Encoder* RobotMap::driveBasedbMidEncoder = NULL;
SpeedController* RobotMap::driveBaseMiddleLeft = NULL;
SpeedController* RobotMap::driveBaseMiddleRight = NULL;
RobotDrive* RobotMap::driveBasedbMiddle = NULL;
DoubleSolenoid* RobotMap::elevatoreLEft = NULL;
DoubleSolenoid* RobotMap::elevatoreRight = NULL;
SpeedController* RobotMap::intakesiLeft = NULL;
SpeedController* RobotMap::intakesiRight = NULL;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=ALLOCATION

void RobotMap::init() {
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
	LiveWindow* lw = LiveWindow::GetInstance();

	driveBaseFrontLeft = new Talon(6);
	lw->AddActuator("DriveBase", "FrontLeft", (Talon*) driveBaseFrontLeft);
	
	driveBaseBackLeft = new Talon(4);
	lw->AddActuator("DriveBase", "BackLeft", (Talon*) driveBaseBackLeft);
	
	driveBaseFrontRight = new Talon(7);
	lw->AddActuator("DriveBase", "FrontRight", (Talon*) driveBaseFrontRight);
	
	driveBaseBackRight = new Talon(9);
	lw->AddActuator("DriveBase", "BackRight", (Talon*) driveBaseBackRight);
	
	driveBasedbTank = new RobotDrive(driveBaseFrontLeft, driveBaseBackLeft,
              driveBaseFrontRight, driveBaseBackRight);
	
	driveBasedbTank->SetSafetyEnabled(true);
        driveBasedbTank->SetExpiration(0.1);
        driveBasedbTank->SetSensitivity(0.5);
        driveBasedbTank->SetMaxOutput(1.0);

	driveBasedbGyro = new Gyro(0);
	lw->AddSensor("DriveBase", "dbGyro", driveBasedbGyro);
	driveBasedbGyro->SetSensitivity(0.007);
	driveBasedbLeftEncoder = new Encoder(0, 1, false, Encoder::k4X);
	lw->AddSensor("DriveBase", "dbLeftEncoder", driveBasedbLeftEncoder);
	driveBasedbLeftEncoder->SetDistancePerPulse(1.0);
        driveBasedbLeftEncoder->SetPIDSourceParameter(Encoder::kRate);
	driveBasedbRightEncoder = new Encoder(2, 3, false, Encoder::k4X);
	lw->AddSensor("DriveBase", "dbRightEncoder", driveBasedbRightEncoder);
	driveBasedbRightEncoder->SetDistancePerPulse(1.0);
        driveBasedbRightEncoder->SetPIDSourceParameter(Encoder::kRate);
	driveBasedbMidEncoder = new Encoder(4, 5, false, Encoder::k4X);
	lw->AddSensor("DriveBase", "dbMidEncoder", driveBasedbMidEncoder);
	driveBasedbMidEncoder->SetDistancePerPulse(1.0);
        driveBasedbMidEncoder->SetPIDSourceParameter(Encoder::kRate);
	driveBaseMiddleLeft = new Talon(5);
	lw->AddActuator("DriveBase", "MiddleLeft", (Talon*) driveBaseMiddleLeft);
	
	driveBaseMiddleRight = new Talon(8);
	lw->AddActuator("DriveBase", "MiddleRight", (Talon*) driveBaseMiddleRight);
	
	driveBasedbMiddle = new RobotDrive(driveBaseMiddleLeft, driveBaseMiddleRight);
	
	driveBasedbMiddle->SetSafetyEnabled(true);
        driveBasedbMiddle->SetExpiration(0.1);
        driveBasedbMiddle->SetSensitivity(0.5);
        driveBasedbMiddle->SetMaxOutput(1.0);
        

	elevatoreLEft = new DoubleSolenoid(0, 0, 1);      
	lw->AddActuator("Elevator", "eLEft", elevatoreLEft);
	
	elevatoreRight = new DoubleSolenoid(0, 2, 3);      
	lw->AddActuator("Elevator", "eRight", elevatoreRight);
	
	intakesiLeft = new Talon(2);
	lw->AddActuator("Intakes", "iLeft", (Talon*) intakesiLeft);
	
	intakesiRight = new Talon(3);
	lw->AddActuator("Intakes", "iRight", (Talon*) intakesiRight);
	


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
}
