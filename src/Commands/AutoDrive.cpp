// RobotBuilder Version: 1.5
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


#include "AutoDrive.h"

AutoDrive::AutoDrive(float left, float right, float strafe,
		float lspeed, float rspeed, float sspeed) {
	// Use requires() here to declare subsystem dependencies
	// eg. requires(chassis);
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
	Requires(Robot::driveBase);

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
	this->Left = left;
	this->Right = right;
	this->Strafe = strafe;
	this->LSpeed = lspeed;
	this->RSpeed = rspeed;
	this->SSpeed = sspeed;

	this->IsStrafe = true;
}

AutoDrive::AutoDrive(float left, float right, float lspeed, float rspeed) {
	this->Left = left;
	this->Right = right;
	this->LSpeed = lspeed;
	this->RSpeed = rspeed;

	this->SSpeed = 0.0;
	this->Strafe = 0.0;

	Requires(Robot::driveBase);

	this->IsStrafe = false;
}

// Called just before this Command runs the first time
void AutoDrive::Initialize() {
	Robot::driveBase->ResetEncoder(9); // use the default
}

// Called repeatedly when this Command is scheduled to run
void AutoDrive::Execute() {
	if(IsStrafe)
		Robot::driveBase->Drive(this->LSpeed, this->RSpeed, this->SSpeed);
	else
		Robot::driveBase->TDrive(this->LSpeed, this->RSpeed);
}

// Make this return true when this Command no longer needs to run execute()
bool AutoDrive::IsFinished() {
		return 1;
}

// Called once after isFinished returns true
void AutoDrive::End() {
	Robot::driveBase->Drive(0.0, 0.0, 0.0);
}

// Called when another command which requires one or more of the same
// subsystems is scheduled to run
void AutoDrive::Interrupted() {
	this->End();
}
